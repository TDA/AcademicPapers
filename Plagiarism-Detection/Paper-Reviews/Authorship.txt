A Fuzzy Logic Approach to Computer Software Source Code Authorship Analysis.

* Use the subjective nature of the elements of authorship, like source comments.
  ** Idea is that the individual will have characteristics that differentiate his product from others.
* Overcomes small datasets that cannot be utilized for Author discrimination or similarity detection.
* Constructs Author profile - size, structure, layout, expression, negate standard way to naming variables.
* Fuzzyvar measures - Braces, indentation, identifiers, utility variables, spelling errors, comments for code.
* Correlate fuzzy metrics, this will show similarity.


Plagiarism in natural and programming languages: an overview of current tools and technologies.
* Proving plagiarism is a hard thing, as even if its copied verbatim, we need proof.
* So, instead of checking for the common stuff, check for common errors.
* Changing comments, data types, identifiers, redundant statements or variables, the structure of selection statements, combining copied and original program statements.
* Any detection system should allow sensitivity to be adjusted
* Preprocess the tokens
  ** map all synonyms/hyper/hyponyms to the base parent, like so: strncmp -> strcmp
* Takes a look at the various approaches by different tools and their success rate.


Old and new challenges in automatic plagiarism detection
* Does it feel single authored or multi authored?
* Plagiarism detection =/= Authorship attribution
* attribute counting, structure-based.


Winnowing: Local Algorithms for Document Fingerprinting
* Positional Independence


Fuzzy-fingerprints for text-based information retrieval
* Highly high-level description of a system, no implementation and no solid description of how to implement. no idea how this even got published, lol.


Plaggie: GNU-licensed source code plagiarism detection engine for Java exercises
* Just a case study, no relevant data


Computer-Based Plagiarism Detection Methods and Tools : An Overview
* Mostly a pseudo-survey paper, not much to gather


Intrinsic Plagiarism Detection Using Character n -gram Profiles
* Instead of comparison with other files, use the inconsistencies in the file to locate plagiarism
* Use sliding windows of text to compare n-grams with the entire document.
* This will allow us to detect style changes.
* Unsure how this will help in code --> Maybe detect if user changes their stylistic choices of editors, commands, etc. ?


